// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iDEA.Entity;

#nullable disable

namespace iDEA.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231229175816_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("iDEA.Entity.Assignment", b =>
                {
                    b.Property<int>("AssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("AssignmentID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("iDEA.Entity.Attendance", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("SessionID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("StudentID", "SessionID");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("iDEA.Entity.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Credit")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourcePath")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("iDEA.Entity.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("iDEA.Entity.Feedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rate")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("iDEA.Entity.LectureCourse", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.HasKey("PersonID", "CourseID");

                    b.ToTable("LectureCourses");
                });

            modelBuilder.Entity("iDEA.Entity.Lecturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("iDEA.Entity.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("iDEA.Entity.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssignmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Options")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("iDEA.Entity.Record", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Chat")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoPath")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("iDEA.Entity.Session", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("iDEA.Entity.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<float>("GPA")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("iDEA.Entity.TakenAssignment", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("AssignmentID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("TEXT");

                    b.Property<float>("Point")
                        .HasColumnType("REAL");

                    b.HasKey("PersonID", "AssignmentID");

                    b.ToTable("TakenAssignments");
                });

            modelBuilder.Entity("iDEA.Entity.TakenCourse", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("CourseID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<float>("Point")
                        .HasColumnType("REAL");

                    b.HasKey("PersonID", "CourseID");

                    b.ToTable("TakenCourses");
                });

            modelBuilder.Entity("iDEA.Entity.TakenExam", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("ExamID")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("TEXT");

                    b.Property<float>("Point")
                        .HasColumnType("REAL");

                    b.HasKey("PersonID", "ExamID");

                    b.ToTable("TakenExams");
                });
#pragma warning restore 612, 618
        }
    }
}
